// Generated by CoffeeScript 1.10.0
var PrimesView,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

PrimesView = (function(superClass) {
  extend(PrimesView, superClass);

  function PrimesView() {
    return PrimesView.__super__.constructor.apply(this, arguments);
  }

  PrimesView.prototype.initialize = function() {
    return this.generator = new PrimesGenerator;
  };

  PrimesView.prototype.getTextInput = function() {
    return '<h4>Enter a Number:</h4><input type="text" name="numInput" class="numInput" maxlength="10">';
  };

  PrimesView.prototype.getOutputLabel = function() {
    return '<h4> Primes: <h5 class="primesList"> </h5> </h4>';
  };

  PrimesView.prototype.getPrimesList = function(num) {
    return this.generator.generatePrimes(num);
  };

  PrimesView.prototype.getFormattedPrimesList = function(primes) {
    var formattedPrimes, unformattedPrimes;
    unformattedPrimes = JSON.stringify(primes);
    formattedPrimes = "";
    _.each(unformattedPrimes, (function(_this) {
      return function(unformattedCharacter) {
        if (unformattedCharacter === '[' || unformattedCharacter === ']') {

        } else if (unformattedCharacter === ',') {
          return formattedPrimes += ", ";
        } else {
          return formattedPrimes += unformattedCharacter;
        }
      };
    })(this));
    return formattedPrimes;
  };

  PrimesView.prototype.updateOutputLabel = function(input) {
    var primes;
    primes = this.getPrimesList(input.target.value);
    return $(".primesList").html(this.getFormattedPrimesList(primes));
  };

  PrimesView.prototype.events = {
    "keyup .numInput": "updateOutputLabel"
  };

  PrimesView.prototype.render = function() {
    this.$el.html(this.getTextInput() + this.getOutputLabel());
    return this;
  };

  return PrimesView;

})(Backbone.View);
