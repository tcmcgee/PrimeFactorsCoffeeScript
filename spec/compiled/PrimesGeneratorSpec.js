// Generated by CoffeeScript 1.10.0
describe("PrimesGenerator", function() {
  var generator;
  generator = new PrimesGenerator;
  it("can get the smallest prime factors of 4", function() {
    return expect(generator.generatePrimes(4)).toEqual([2, 2]);
  });
  it("can get the smallest prime factors of 5", function() {
    return expect(generator.generatePrimes(5)).toEqual([5]);
  });
  it("can get the smallest prime factors of 6", function() {
    return expect(generator.generatePrimes(6)).toEqual([2, 3]);
  });
  it("can get the smallest prime factors of 7", function() {
    return expect(generator.generatePrimes(7)).toEqual([7]);
  });
  it("can get the smallest prime factors of 9", function() {
    return expect(generator.generatePrimes(9)).toEqual([3, 3]);
  });
  it("can get the smallest prime factors of 15", function() {
    return expect(generator.generatePrimes(15)).toEqual([3, 5]);
  });
  it("can get the smallest prime factors of 32", function() {
    return expect(generator.generatePrimes(32)).toEqual([2, 2, 2, 2, 2]);
  });
  it("can get the smallest prime factors of 50", function() {
    return expect(generator.generatePrimes(50)).toEqual([2, 5, 5]);
  });
  it("can get the smallest prime factors of 100", function() {
    return expect(generator.generatePrimes(100)).toEqual([2, 2, 5, 5]);
  });
  it("can get the smallest prime factors of 101", function() {
    return expect(generator.generatePrimes(101)).toEqual([101]);
  });
  it("can get the smallest prime factors of 105", function() {
    return expect(generator.generatePrimes(105)).toEqual([3, 5, 7]);
  });
  it("can get the smallest prime factors of 1", function() {
    return expect(generator.generatePrimes(1)).toEqual([]);
  });
  it("can get the smallest prime factors of 0", function() {
    return expect(generator.generatePrimes(0)).toEqual([]);
  });
  return it("can get the smallest prime factors of 1235", function() {
    return expect(generator.generatePrimes(1235)).toEqual([5, 13, 19]);
  });
});
